/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package myhabittracker;

import java.awt.Component;
import java.awt.FlowLayout;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;

/**
 *
 * @author asus
 */
public class YesNoJFrame extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(YesNoJFrame.class.getName());
    private final DashboardHabit dashboard;
    JCheckBox monCheck, tueCheck, wedCheck, thuCheck, friCheck, satCheck, sunCheck;

    public YesNoJFrame(DashboardHabit dashboard) {
        this.dashboard = dashboard;
        initComponents();
        
        // after initComponents() in YesNoJFrame constructor
ReminderManager.getInstance().start();
        
        setSize(getPreferredSize());   // use the size you set in Designer
        setLocationRelativeTo(null);   // center on screen
        setResizable(true);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);

        daysPanel.setLayout(new FlowLayout());
        monCheck = new JCheckBox("Mon");
        tueCheck = new JCheckBox("Tue");
        wedCheck = new JCheckBox("Wed");
        thuCheck = new JCheckBox("Thu");
        friCheck = new JCheckBox("Fri");
        satCheck = new JCheckBox("Sat");
        sunCheck = new JCheckBox("Sun");

        daysPanel.add(monCheck);
        daysPanel.add(tueCheck);
        daysPanel.add(wedCheck);
        daysPanel.add(thuCheck);
        daysPanel.add(friCheck);
        daysPanel.add(satCheck);
        daysPanel.add(sunCheck);
// Hide by default
        daysPanel.setVisible(false);
    }

    /**
     * Creates new form HabitPanel
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        NameLabel = new javax.swing.JLabel();
        QuestionLabel = new javax.swing.JLabel();
        FrequencyLabel = new javax.swing.JLabel();
        ReminderLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        NameTextField = new javax.swing.JTextField();
        QuestionTextField = new javax.swing.JTextField();
        ClockButton = new javax.swing.JButton();
        ClockTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        SaveButton = new javax.swing.JButton();
        FreqButton = new javax.swing.JComboBox<>();
        daysPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        NameLabel.setText("Name:");

        QuestionLabel.setText("Question:");

        FrequencyLabel.setText("Frequency:");

        ReminderLabel.setText("Reminder:");

        jLabel1.setText("Notes:");

        NameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameTextFieldActionPerformed(evt);
            }
        });

        QuestionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuestionTextFieldActionPerformed(evt);
            }
        });

        ClockButton.setText("Set");
        ClockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClockButtonActionPerformed(evt);
            }
        });

        ClockTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClockTextFieldActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        FreqButton.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Daily", "Weekly", "Monthly"}));
        FreqButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FreqButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SaveButton)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(FreqButton, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(QuestionTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                        .addComponent(FrequencyLabel, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(NameLabel, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(QuestionLabel, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(NameTextField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ClockButton)
                                .addComponent(jLabel1))
                            .addGap(124, 124, 124)
                            .addComponent(ClockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(ReminderLabel, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(daysPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(QuestionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(QuestionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(FrequencyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FreqButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(daysPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(ReminderLabel)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(ClockTextField))
                    .addComponent(ClockButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SaveButton)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameTextFieldActionPerformed

    private void ClockTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClockTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ClockTextFieldActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        // TODO add your handling code here:
    String habitName = NameTextField.getText().trim();
    if (habitName.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter a habit name.");
        return;
    }

    // dashboard must be a reference to the existing DashboardHabit instance
    dashboard.addHabitRow(habitName);

    this.dispose();
    }//GEN-LAST:event_SaveButtonActionPerformed

    private void QuestionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuestionTextFieldActionPerformed
        // TODO add your handling code here:
        String Question = QuestionTextField.getText().trim();
        
    }//GEN-LAST:event_QuestionTextFieldActionPerformed

    private void FreqButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FreqButtonActionPerformed
        // TODO add your handling code here:
            String selected = (String) FreqButton.getSelectedItem();
    if ("Weekly".equals(selected)) {
        daysPanel.setVisible(true);
    } else {
        daysPanel.setVisible(false);
    }
    revalidate();
    repaint();
    }//GEN-LAST:event_FreqButtonActionPerformed

    private void ClockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClockButtonActionPerformed
        // TODO add your handling code here:
        // inside SaveButtonActionPerformed(...) after you validated/saved the habit
try {
    String text = QuestionTextField.getText().trim();
    if (text.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter habit text.", "Validation", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // read time from ClockTextField - expect format HH:mm (24-hour) or h:mm a if you prefer
    String timeStr = ClockTextField.getText().trim(); // e.g. "08:00" or "8:00"
    java.time.LocalTime time;
    try {
        time = java.time.LocalTime.parse(timeStr); // expects "HH:mm" or "HH:mm:ss"
    } catch (Exception ex) {
        // try permissive parse for h:mm a
        try {
            java.time.format.DateTimeFormatter f = java.time.format.DateTimeFormatter.ofPattern("h:mm a");
            time = java.time.LocalTime.parse(timeStr, f);
        } catch (Exception ex2) {
            JOptionPane.showMessageDialog(this, "Please enter time in HH:mm format (e.g. 08:00).", "Invalid time", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }

    // Determine frequency and days - adapt to how you store frequency in your UI.
    Reminder rem = new Reminder();
    rem.setText(text);
    // Example: if you have a FreqButton radio that sets a variable frequencyValue:
    // if (frequencyValue.equals("Daily")) ...
    // For demo, I assume there's a variable or selection component; adapt below:

    // --- EXAMPLE ASSUMPTION START ---
    // Suppose you have a JComboBox<String> FrequencyCombo with "Daily" / "Weekly"
    String freqSelected = "Daily";
    try { freqSelected = FreqButton.getSelectedItem().toString(); } catch (Exception ign) {}
    if ("Weekly".equalsIgnoreCase(freqSelected)) {
        rem.setFrequency(Reminder.Frequency.WEEKLY);
        // Suppose you have checkboxes for days inside daysPanel (JCheckBox instances)
        Set<java.time.DayOfWeek> days = new HashSet<>();
        for (Component c : daysPanel.getComponents()) {
            if (c instanceof javax.swing.JCheckBox) {
                javax.swing.JCheckBox cb = (javax.swing.JCheckBox) c;
                if (cb.isSelected()) {
                    // set the mapping by checkbox text, e.g. "Mon" -> DayOfWeek.MONDAY
                    String txt = cb.getText().toUpperCase();
                    switch (txt) {
                        case "MON": case "MONDAY": days.add(java.time.DayOfWeek.MONDAY); break;
                        case "TUE": case "TUES": case "TUESDAY": days.add(java.time.DayOfWeek.TUESDAY); break;
                        case "WED": case "WEDNESDAY": days.add(java.time.DayOfWeek.WEDNESDAY); break;
                        case "THU": case "THURSDAY": days.add(java.time.DayOfWeek.THURSDAY); break;
                        case "FRI": case "FRIDAY": days.add(java.time.DayOfWeek.FRIDAY); break;
                        case "SAT": case "SATURDAY": days.add(java.time.DayOfWeek.SATURDAY); break;
                        case "SUN": case "SUNDAY": days.add(java.time.DayOfWeek.SUNDAY); break;
                    }
                }
            }
        }
        rem.setDaysOfWeek(days);
    } else {
        rem.setFrequency(Reminder.Frequency.DAILY);
    }
    // --- EXAMPLE ASSUMPTION END ---

    rem.setTime(time);

    // register
    ReminderManager.getInstance().addReminder(rem);
    JOptionPane.showMessageDialog(this, "Reminder saved.", "Saved", JOptionPane.INFORMATION_MESSAGE);
} catch (Exception ex) {
    ex.printStackTrace();
    JOptionPane.showMessageDialog(this, "Failed to create reminder: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_ClockButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        //java.awt.EventQueue.invokeLater(() -> new YesNoJFrame().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClockButton;
    private javax.swing.JTextField ClockTextField;
    private javax.swing.JComboBox<String> FreqButton;
    private javax.swing.JLabel FrequencyLabel;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JTextField NameTextField;
    private javax.swing.JLabel QuestionLabel;
    private javax.swing.JTextField QuestionTextField;
    private javax.swing.JLabel ReminderLabel;
    private javax.swing.JButton SaveButton;
    private javax.swing.JPanel daysPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
